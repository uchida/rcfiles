# -*- shell-script -*-
# zshenv specific to machine local
# path setting
for prefix in '/usr/osxws' '/usr/local'; do
    if [ -d "$prefix" ]; then
        for pth in "$prefix/bin" "$prefix/sbin"; do
            if ! echo "$PATH" | grep -q "$pth"; then
                PATH="$pth:$PATH"
            fi
        done
        for pth in "$prefix/share/man" "$prefix/man"; do
            if ! echo "$MANPATH" | grep -q "$pth"; then
                MANPATH="$pth:$MANPATH"
            fi
        done
        if ! echo "$FPATH" | grep -q "$prefix/share/zsh/site-functions"; then
            FPATH="$pth:$FPATH"
        fi
    fi
done
for pth in "$HOME/Library/bin" "$HOME/bin"; do
    if ! echo "$PATH" | grep -q "$pth"; then
        PATH="$pth:$PATH"
    fi
done
unset prefix pth
export PATH MANPATH
export FPATH="$HOME/.zsh/site-functions:$FPATH"

# environment variables for gem
if [ -x `which gem` ]; then
    case "$OSTYPE" in
        darwin*)
            export GEM_PATH='/usr/lib/ruby/gems/1.8:/Library/Ruby/Gems/1.8'
            export GEM_HOME="$HOME/Library/Ruby/Gems/1.8/gems"
            ;;
        linux*)
            export GEM_PATH='/usr/lib/ruby/gems/1.8'
            export GEM_HOME="$HOME/lib/ruby/gems/1.8"
            ;;
        freebsd*)
            export GEM_PATH='/usr/local/lib/ruby/gems/1.8'
            export GEM_HOME="$HOME/lib/ruby/gems/1.8"
            ;;
    esac
    if ! echo "$PATH" | /usr/bin/grep -q "$GEM_HOME/bin"; then
        PATH="$GEM_HOME/bin:$PATH"
    fi
    export PATH
fi

# personal texmf
export TEXMFHOME="$HOME/Library/texmf"
export TEXMFVAR="$TEXMFHOME"
export TEXMFCONFIG="$TEXMFHOME"

# source proxy setting when available
if [ -s "$HOME/.zsh/proxy" ]; then
    source $HOME/.zsh/proxy
fi

# Intel Compiler and Intel Math Kernel Library
intel_arch=$(test -z "$(uname -a | grep "x86_64")" && echo "ia32" || echo "intel64")
for script in iccvars.sh ifortvars.sh; do
    if [ -x /opt/intel/bin/$script ]; then
    . /opt/intel/bin/$script $intel_arch
fi
unset intel_arch
